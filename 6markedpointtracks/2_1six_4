from traintrack import *
from sage.combinat.permutation import Permutations
import copy

from sage.graphs.views import EdgesView
from cusp import cusp
from itertools import product
from sage.combinat.permutation import Permutations
import copy
from check_dict_values_cyclic import *
from is_traintrack_in_list import *

G = Graph({0:[0,6],1:[1,9],2:[2,9],3:[3,8],4:[4,8],5:[5,7],6:[0,7,9],7:[6,5,8],8:[7,4,3,9],9:[6,8,2,1]})
order = {0:[(0,0),(0,6)],1:[(1,1),(1,9)],2:[(2,2),(2,9)],3:[(3,3),(3,8)],4:[(4,4),(4,8)],5:[(5,5),(5,7)],6:[(0,6),(6,7),(6,9)],7:[(6,7),(5,7),(7,8)],8:[(7,8),(4,8),(3,8),(8,9)],9:[(6,9),(8,9),(2,9),(1,9)]}
infpoly = {"marked":[(1,[0]),(1,[1]),(1,[2]),(1,[3]),(1,[4]),(1,[5])],"unmarked":[(4,[6,7,8,9])]}
singularity_type = {"marked":[1,1,1,1,1,1],"unmarked":[4],"boundary":[2]}
c0 = cusp(8,((3,8),(4,8)))
c1 = cusp(9,((1,9),(2,9)))
cusps_list = [c0,c1]
side_swapping = [(0,0),(1,1),(2,2),(3,3),(4,4),(5,5)]
T = StandardTrainTrack(G,cusps_list,order,singularity_type,infpoly,side_swapping)